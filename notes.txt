OAuth

  Step 1: Register our App with Google's OAuth Server
  Step 2: Define the User model
  Step 3: Discuss PassportJS
  Step 4: Install & Configure Session middleware
  Step 5: Install PassportJS
  Step 6: Create a Passport config module
  Step 7: Install a Passport Strategy for OAuth
  Step 8: Configure Passport
  Step 9: Define routes for authentication
  Step 10: Add Login/Logout UI

  Your S3 access key: bl3sVIdW5rkhWBet
Your S3 secret key: 8XrXouNjX7P2ec7N

RENDERS BOOKS
<div class="row col-xs-8 col-xs-offset-2">
    <% if (userData) { %>
      <% userData.items.forEach(function(book) { %>
        <% if (book.volumeInfo.imageLinks.thumbnail) { %>
          <div class="col-xs-4">
            <img src="<%= book.volumeInfo.imageLinks.thumbnail %>" class="img-circle" width="100">
            <p><%= book.volumeInfo.title %></p>
            <p><%= book.volumeInfo.authors %></p>
            
            <form action="" method="GET">
                <button>SAVE</button>
            </form>
            <br>


            <!-- <p> <a href="<%= book.volumeInfo.previewLink %> ">Link </a></p> -->
          </div>
        <% } %>
      <% }); %>
    <% } else { %>
      <h3 class="text-center text-info">
        No book covers found!
      </h3>

    <% } %>
  </div>


































SHOW PAGE



<%- include('../partials/header') %>
<h2>Book Details</h2>

<main class="saved-books-grid-container">


 

   <div class="grid-items" > 
      <p><%= book.title %> </p>
      <p><%= book.authors %></p>
      <p><%= book.categories %>  </p>
      p<%= book.description %></p> </div>

</main>           
WHAT DO YOU THINK?

 
  
<br><br><h2>Comments</h2>
<form id="add-review-form" method="POST"
  action="/books/<%= book._id %>/comments">
  <label>Comments:</label>
  <textarea name="content"></textarea>

  <input type="submit" value="Add Comment">
</form>





<% if (book.comment.length) { %>
  <table>
    <thead>
      <tr>
        <th>Date</th>
        <th>Comments</th>
        <th>Edit</th>

      </tr>
    </thead>
    <tbody>
      <% book.comment.forEach(function(c) { %>
        <tr>
          <td><%= c.createdAt.toLocaleDateString() %></td>
          <td><%= c.content %></td>

          <td> 
            <a href="/comments/<%= c._id %>/edit"> Edit Comment</a>
            
            <form action="/comments/<%= c._id %>?_method=PUT" method="POST">
              <textarea name="content"></textarea>
              <button type="Submit"> EDIT</button>
              </form> 
          </td>
          <td>           
            <form action="/comments/<%= c._id %>?_method=DELETE" method="POST">
            <button type="Submit"> DELETE</button>
            </form>  
      </td>



        </tr>
      <% }); %>
    </tbody>
  </table>
<% } else { %>
  <h5>No comments Yet</h5>
<% } %>











 

<%- include('../partials/footer') %>



    
async function create(req, res) {
    try {
    console.log("LOOK HERE ALSo:", req.body)
        const book = await Book.create(req.body)
        book.title= req.body.title
        book.authors= req.body.authors
        book.thumbnail= req.body.thumbnail
        book.save()

    console.log("LOOK HERE:", book)
        res.redirect('books/');
    } catch (error) {
        console.error("Error saving , try Again Ayda:", error);
        // res.status(500).send("Internal Server Error");
    }
};






<% if (book.comments.length) { %>
  <table>
    <thead>
      <tr>
        <th>Date</th>
        <th>Comments</th>
        <th>Edit</th>

      </tr>
    </thead>
    <tbody>
      <% book.comments.forEach(function(c) { %>
        <tr>
          <td><%= c.createdAt.toLocaleDateString() %></td>
          <td><%= c.content %></td>
          <td>          <a href="/comments/<%= c._id %>/edit"> Edit Comment</a></td>


        </tr>
      <% }); %>
    </tbody>
  </table>
<% } else { %>
  <h5>No comments Yet</h5>
<% } %>





 
  

COMMENT CONTROLLER:


const Book = require('../models/book')


module.exports = {
    create,
    edit,
    update
}


async function create(req, res) {
  const book = await Book.findById(req.params.id)//
  const comment = book.comments.find(comment => comment._id.equals(req.params.id))
  res.redirect(`/books/${book._id}`)
}





async function edit(req, res) {
  const book = await Book.find(req.params.id)
  const comment = book.comments.find(comment => comment._id.equals(req.params.commenId))
  res.render('books/edit', { 
    title: 'Edit comment',
    comment

  })
}


async function update(req, res) {
  const book = await Book.findById(req.params.id)
  const comment = await Book.comments.findById(req.params.id)
  comment.edit(req.params.id, req.body)
  book.push(req.body);
  
  try {
    // Save any changes made to the movie doc
    await comment.save();
  } catch (err) {
    console.log(err);
  }
  // Step 5:  Respond to the Request (redirect if data has been changed)
  res.redirect(`/books/${book._id}`)
}





////NEW 


            <% if (userData) { %>
              <% userData.items.forEach(function(book) { %>

                <!-- <li class="glide__slide"> NEw Books -->
                <% if (book.volumeInfo.imageLinks.thumbnail) { %>
                  <li>

                  <img name="thumbnail" src="<%= book.volumeInfo.imageLinks.thumbnail %>" class="img-circle"
                    width="100">
                  <br>
                  <p name="title">
                    <%= book.volumeInfo.title %>
                  </p>
                  <p name="authors">
                    <%= book.volumeInfo.authors %>
                  </p>
                  <p name="description">
                    <%book.volumeInfo.description%>
                  </p>
                  <p name="description">
                    <%book.volumeInfo.categories%>
                  </p>

                  <form action="/books" method="POST">
                    <input type="text" hidden name="title" value="<%= book.volumeInfo.title %>">
                    <input type="text" hidden name="authors" value="<%= book.volumeInfo.authors %>">
                    <input type="text" hidden name="thumbnail" value="<%=book.volumeInfo.imageLinks.thumbnail %>">
                    <input type="text" hidden name="description" value="<%=book.volumeInfo.description %>">
                    <input type="text" hidden name="categories" value="<%=book.volumeInfo.categories %>">
                    <button>SAVE</button>
                  </form>

                </li>
          </ul>
        </div>
        <% } %>

          <% }); %>

            <% } else { %>
              <h3 class="text-center text-info">
                No book covers !
              </h3>
              <% } %>

